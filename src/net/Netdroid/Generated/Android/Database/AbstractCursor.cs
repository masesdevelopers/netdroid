/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Database
{
    #region AbstractCursor declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html"/>
    /// </summary>
    public partial class AbstractCursor : Android.Database.CrossProcessCursor
    {
        const string _bridgeClassName = "android.database.AbstractCursor";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("AbstractCursor class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public AbstractCursor() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("AbstractCursor class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public AbstractCursor(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region AbstractCursor implementation
    public partial class AbstractCursor
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isNull(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsNull(int arg0)
        {
            return IExecute<bool>("isNull", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getDouble(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="double"/></returns>
        public double GetDouble(int arg0)
        {
            return IExecute<double>("getDouble", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getFloat(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="float"/></returns>
        public float GetFloat(int arg0)
        {
            return IExecute<float>("getFloat", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getCount()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetCount()
        {
            return IExecute<int>("getCount");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getInt(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetInt(int arg0)
        {
            return IExecute<int>("getInt", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getString(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetString(int arg0)
        {
            return IExecute<Java.Lang.String>("getString", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getColumnNames()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String[] GetColumnNames()
        {
            return IExecuteArray<Java.Lang.String>("getColumnNames");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getLong(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="long"/></returns>
        public long GetLong(int arg0)
        {
            return IExecute<long>("getLong", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getShort(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="short"/></returns>
        public short GetShort(int arg0)
        {
            return IExecute<short>("getShort", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getWindow()"/>
        /// </summary>
        /// <returns><see cref="Android.Database.CursorWindow"/></returns>
        public Android.Database.CursorWindow GetWindow()
        {
            return IExecute<Android.Database.CursorWindow>("getWindow");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getNotificationUri()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.Uri"/></returns>
        public Android.Net.Uri GetNotificationUri()
        {
            return IExecute<Android.Net.Uri>("getNotificationUri");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getExtras()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle GetExtras()
        {
            return IExecute<Android.Os.Bundle>("getExtras");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#respond(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle Respond(Android.Os.Bundle arg0)
        {
            return IExecute<Android.Os.Bundle>("respond", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getWantsAllOnMoveCalls()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool GetWantsAllOnMoveCalls()
        {
            return IExecute<bool>("getWantsAllOnMoveCalls");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isClosed()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsClosed()
        {
            return IExecute<bool>("isClosed");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#onMove(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnMove(int arg0, int arg1)
        {
            return IExecute<bool>("onMove", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#requery()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool Requery()
        {
            return IExecute<bool>("requery");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getBlob(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte[] GetBlob(int arg0)
        {
            return IExecuteArray<byte>("getBlob", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isAfterLast()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsAfterLast()
        {
            return IExecute<bool>("isAfterLast");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isBeforeFirst()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsBeforeFirst()
        {
            return IExecute<bool>("isBeforeFirst");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isFirst()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFirst()
        {
            return IExecute<bool>("isFirst");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isLast()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLast()
        {
            return IExecute<bool>("isLast");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#move(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Move(int arg0)
        {
            return IExecute<bool>("move", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#moveToFirst()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool MoveToFirst()
        {
            return IExecute<bool>("moveToFirst");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#moveToLast()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool MoveToLast()
        {
            return IExecute<bool>("moveToLast");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#moveToNext()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool MoveToNext()
        {
            return IExecute<bool>("moveToNext");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#moveToPosition(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool MoveToPosition(int arg0)
        {
            return IExecute<bool>("moveToPosition", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#moveToPrevious()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool MoveToPrevious()
        {
            return IExecute<bool>("moveToPrevious");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getPosition()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetPosition()
        {
            return IExecute<int>("getPosition");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getColumnCount()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetColumnCount()
        {
            return IExecute<int>("getColumnCount");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndex(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetColumnIndex(Java.Lang.String arg0)
        {
            return IExecute<int>("getColumnIndex", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndexOrThrow(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetColumnIndexOrThrow(Java.Lang.String arg0)
        {
            return IExecute<int>("getColumnIndexOrThrow", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getType(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetType(int arg0)
        {
            return IExecute<int>("getType", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getColumnName(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetColumnName(int arg0)
        {
            return IExecute<Java.Lang.String>("getColumnName", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getNotificationUris()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Net.Uri> GetNotificationUris()
        {
            return IExecute<Java.Util.List<Android.Net.Uri>>("getNotificationUris");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#copyStringToBuffer(int,android.database.CharArrayBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Database.CharArrayBuffer"/></param>
        public void CopyStringToBuffer(int arg0, Android.Database.CharArrayBuffer arg1)
        {
            IExecute("copyStringToBuffer", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#deactivate()"/>
        /// </summary>
        public void Deactivate()
        {
            IExecute("deactivate");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#fillWindow(int,android.database.CursorWindow)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Database.CursorWindow"/></param>
        public void FillWindow(int arg0, Android.Database.CursorWindow arg1)
        {
            IExecute("fillWindow", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#registerContentObserver(android.database.ContentObserver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Database.ContentObserver"/></param>
        public void RegisterContentObserver(Android.Database.ContentObserver arg0)
        {
            IExecute("registerContentObserver", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#registerDataSetObserver(android.database.DataSetObserver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Database.DataSetObserver"/></param>
        public void RegisterDataSetObserver(Android.Database.DataSetObserver arg0)
        {
            IExecute("registerDataSetObserver", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#setExtras(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        public void SetExtras(Android.Os.Bundle arg0)
        {
            IExecute("setExtras", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#setNotificationUri(android.content.ContentResolver,android.net.Uri)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
        /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
        public void SetNotificationUri(Android.Content.ContentResolver arg0, Android.Net.Uri arg1)
        {
            IExecute("setNotificationUri", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#setNotificationUris(android.content.ContentResolver,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        public void SetNotificationUris(Android.Content.ContentResolver arg0, Java.Util.List<Android.Net.Uri> arg1)
        {
            IExecute("setNotificationUris", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#unregisterContentObserver(android.database.ContentObserver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Database.ContentObserver"/></param>
        public void UnregisterContentObserver(Android.Database.ContentObserver arg0)
        {
            IExecute("unregisterContentObserver", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#unregisterDataSetObserver(android.database.DataSetObserver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Database.DataSetObserver"/></param>
        public void UnregisterDataSetObserver(Android.Database.DataSetObserver arg0)
        {
            IExecute("unregisterDataSetObserver", arg0);
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}