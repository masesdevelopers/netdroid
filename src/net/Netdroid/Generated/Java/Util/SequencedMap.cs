/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Util
{
    #region SequencedMap declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html"/>
    /// </summary>
    public partial class SequencedMap : Java.Util.Map
    {
        const string _bridgeClassName = "java.util.SequencedMap";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("SequencedMap class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public SequencedMap() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("SequencedMap class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public SequencedMap(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region SequencedMap<K, V> declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html"/>
    /// </summary>
    /// <typeparam name="K"></typeparam>
    /// <typeparam name="V"></typeparam>
    public partial class SequencedMap<K, V> : Java.Util.Map<K, V>
    {
        const string _bridgeClassName = "java.util.SequencedMap";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("SequencedMap class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public SequencedMap() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("SequencedMap class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public SequencedMap(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
    
    }
    #endregion

    #region SequencedMap implementation
    public partial class SequencedMap
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#reversed()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.SequencedMap"/></returns>
        public Java.Util.SequencedMap Reversed()
        {
            return IExecuteWithSignature<Java.Util.SequencedMap>("reversed", "()Ljava/util/SequencedMap;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#firstEntry()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map.Entry"/></returns>
        public Java.Util.Map.Entry FirstEntry()
        {
            return IExecuteWithSignature<Java.Util.Map.Entry>("firstEntry", "()Ljava/util/Map$Entry;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#lastEntry()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map.Entry"/></returns>
        public Java.Util.Map.Entry LastEntry()
        {
            return IExecuteWithSignature<Java.Util.Map.Entry>("lastEntry", "()Ljava/util/Map$Entry;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#pollFirstEntry()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map.Entry"/></returns>
        public Java.Util.Map.Entry PollFirstEntry()
        {
            return IExecuteWithSignature<Java.Util.Map.Entry>("pollFirstEntry", "()Ljava/util/Map$Entry;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#pollLastEntry()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map.Entry"/></returns>
        public Java.Util.Map.Entry PollLastEntry()
        {
            return IExecuteWithSignature<Java.Util.Map.Entry>("pollLastEntry", "()Ljava/util/Map$Entry;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#sequencedValues()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.SequencedCollection"/></returns>
        public Java.Util.SequencedCollection SequencedValues()
        {
            return IExecuteWithSignature<Java.Util.SequencedCollection>("sequencedValues", "()Ljava/util/SequencedCollection;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#sequencedEntrySet()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.SequencedSet"/></returns>
        public Java.Util.SequencedSet SequencedEntrySet()
        {
            return IExecuteWithSignature<Java.Util.SequencedSet>("sequencedEntrySet", "()Ljava/util/SequencedSet;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#sequencedKeySet()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.SequencedSet"/></returns>
        public Java.Util.SequencedSet SequencedKeySet()
        {
            return IExecuteWithSignature<Java.Util.SequencedSet>("sequencedKeySet", "()Ljava/util/SequencedSet;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#putFirst(java.lang.Object,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <returns><see cref="object"/></returns>
        public object PutFirst(object arg0, object arg1)
        {
            return IExecuteWithSignature("putFirst", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#putLast(java.lang.Object,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <returns><see cref="object"/></returns>
        public object PutLast(object arg0, object arg1)
        {
            return IExecuteWithSignature("putLast", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region ISequencedMap<K, V>
    /// <summary>
    /// .NET interface for TO BE DEFINED FROM USER
    /// </summary>
    public partial interface ISequencedMap<K, V> : Java.Util.IMap<K, V>
    {
        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region SequencedMap<K, V> implementation
    public partial class SequencedMap<K, V> : Java.Util.ISequencedMap<K, V>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Java.Util.SequencedMap{K, V}"/> to <see cref="Java.Util.SequencedMap"/>
        /// </summary>
        public static implicit operator Java.Util.SequencedMap(Java.Util.SequencedMap<K, V> t) => t.Cast<Java.Util.SequencedMap>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#reversed()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.SequencedMap"/></returns>
        public Java.Util.SequencedMap<K, V> Reversed()
        {
            return IExecuteWithSignature<Java.Util.SequencedMap<K, V>>("reversed", "()Ljava/util/SequencedMap;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#firstEntry()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map.Entry"/></returns>
        public Java.Util.Map.Entry<K, V> FirstEntry()
        {
            return IExecuteWithSignature<Java.Util.Map.Entry<K, V>>("firstEntry", "()Ljava/util/Map$Entry;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#lastEntry()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map.Entry"/></returns>
        public Java.Util.Map.Entry<K, V> LastEntry()
        {
            return IExecuteWithSignature<Java.Util.Map.Entry<K, V>>("lastEntry", "()Ljava/util/Map$Entry;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#pollFirstEntry()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map.Entry"/></returns>
        public Java.Util.Map.Entry<K, V> PollFirstEntry()
        {
            return IExecuteWithSignature<Java.Util.Map.Entry<K, V>>("pollFirstEntry", "()Ljava/util/Map$Entry;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#pollLastEntry()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map.Entry"/></returns>
        public Java.Util.Map.Entry<K, V> PollLastEntry()
        {
            return IExecuteWithSignature<Java.Util.Map.Entry<K, V>>("pollLastEntry", "()Ljava/util/Map$Entry;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#sequencedValues()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.SequencedCollection"/></returns>
        public Java.Util.SequencedCollection<V> SequencedValues()
        {
            return IExecuteWithSignature<Java.Util.SequencedCollection<V>>("sequencedValues", "()Ljava/util/SequencedCollection;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#sequencedEntrySet()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.SequencedSet"/></returns>
        public Java.Util.SequencedSet<Java.Util.Map.Entry<K, V>> SequencedEntrySet()
        {
            return IExecuteWithSignature<Java.Util.SequencedSet<Java.Util.Map.Entry<K, V>>>("sequencedEntrySet", "()Ljava/util/SequencedSet;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#sequencedKeySet()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.SequencedSet"/></returns>
        public Java.Util.SequencedSet<K> SequencedKeySet()
        {
            return IExecuteWithSignature<Java.Util.SequencedSet<K>>("sequencedKeySet", "()Ljava/util/SequencedSet;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#putFirst(java.lang.Object,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="K"/></param>
        /// <param name="arg1"><typeparamref name="V"/></param>
        /// <returns><typeparamref name="V"/></returns>
        public V PutFirst(K arg0, V arg1)
        {
            return IExecuteWithSignature<V>("putFirst", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/SequencedMap.html#putLast(java.lang.Object,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="K"/></param>
        /// <param name="arg1"><typeparamref name="V"/></param>
        /// <returns><typeparamref name="V"/></returns>
        public V PutLast(K arg0, V arg1)
        {
            return IExecuteWithSignature<V>("putLast", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}